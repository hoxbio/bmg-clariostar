package bmg

import (
	"reflect"
	"slices"
	"testing"
)

var flExp = []byte{
	0x04, 0x31, 0xe8, 0x21, 0x64, 0x05, 0x9e, 0x04, 0x64, 0x2c, 0x4a, 0x1d, 0x00, 0x0c, 0x08, 0xff,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x0f, 0x27, 0x0f, 0x19, 0x00, 0x28, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x0d, 0xea, 0x15, 0x90, 0x15, 0x68, 0x16, 0x5d,
	0x17, 0xca, 0x17, 0x7a, 0x00, 0x04, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x64, 0x00, 0x4b, 0x00, 0x00,
}

func TestFl(t *testing.T) {

	pl := PlateCfg{
		Length:      12776,
		Width:       8548,
		CornerX:     1438,
		CornerY:     1124,
		Cols:        12,
		Rows:        8,
		Wells:       [48]byte{0xff},
		StartCorner: TopLeft,
	}
	fl := FlCfg{
		Ex:           550,
		ExBw:         20,
		Em:           605,
		EmBw:         40,
		Dich:         5725,
		Gain:         3562,
		FocalHeight:  40,
		Flashes:      100,
		SettlingTime: 5,
	}
	rc := RunCfg{Plate: pl}

	d, err := flBytes(rc, fl)
	if err != nil {
		t.Fatalf("failed building bytes: %s", err)
	}

	if !slices.Equal(d, flExp) {
		t.Fail()
	}

}

var flUnmarshalExp = FlData{
	Total:         3,
	Complete:      3,
	Multichromats: 1,
	Wells:         3,
	Temp:          0,
	Ovf:           260000,
	Vals:          []uint32{67697, 67490, 67935},
}

func TestUnmarshalFlData(t *testing.T) {
	var data = []byte{
		0x02, 0x05, 0x06, 0x26, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0xF7, 0xA0, 0x01,
		0x00, 0x01, 0x00, 0x03, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x01, 0x08, 0x71, 0x00, 0x01, 0x07, 0xA2, 0x00, 0x01, 0x09, 0x5F, 0x00,
	}
	d, err := unmarshalFlData(data)
	if err != nil {
		t.Fatal(err)
	}

	if !reflect.DeepEqual(flUnmarshalExp, d) {
		t.Fail()
	}
}
